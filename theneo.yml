openapi: 3.0.0
servers:
  - description: Theneo Sample API
    url: https://app.theneo.io.co
info:
  description: |
    Theneo APIs enable you to generate beautiful API documentations effortlessly. Why should only top companies like Stripe, Square, and Twilio have gorgeous documentations? With Theneo you can also generate API documents that you could be proud of. The Theneo API follows the general patterns of REST Please note: All the endpoints and API references discussed here are just for demo purposes, they are not functional
  version: 1.0.0
  title: Theneo Sample OpenAPI Doc
  contact:
    email: hello@theneo.io
host: "https://app.theneo.io"
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
paths:
  /documentation:
    get:
      tags:
        - developers
      summary: retrieves documentations
      operationId: searchDocs
      description: |
        By passing in the appropriate options, you can search for
        available API documentations
      parameters:
        - in: query
          name: searchString
          description: pass an optional search string for looking up inventory
          required: false
          schema:
            type: string
        - in: query
          name: numberofDocs
          description: number of documentations to return
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 25
        - in: query
          name: category
          description: category of documentations to return
          example: publicAPI
          required: false
          schema:
            type: string
        - in: query
          name: sortBy
          description: "Allowed: dateUpdated, dateAdded."
          example: key
          required: false
          schema:
            type: string
        - name: sortOrder
          in: query
          description: "Allowed: asc, desc. asc is ascending and sorts from A to Z. desc is descending and sorts from Z to A."
          example: desc
          required: false
          schema:
            type: string
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Doc"
        "400":
          description: bad input parameter
    post:
      tags:
        - admins
      summary: adds a documentation
      operationId: addDoc
      description: Adds a documentation to the system
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - documentation
                - key
              properties:
                documentation:
                  type: string
                  example: Theneo Sample API Doc
                  description: The title of the documentation
                key:
                  example: demo
                  description: Unique Id of of the documentation
                  type: string
                category:
                  example: knockKnock
                  description: category of the documentation (allowed categories TBD)
                  type: string
      responses:
        "201":
          description: item created
          content:
            application/vnd.json:
              schema:
                $ref: "#/components/schemas/Doc"
        "400":
          description: invalid input, object invalid
        "409":
          description: an existing item already exists

  /documentation/{id}:
    delete:
      tags:
        - developers
      summary: Deletes an API Doc
      operationId: Deletes an API Doc
      description: Delete the API Doc from the system
      parameters:
        - name: id
          example: ce0b9fbe-7ad8-11eb-9439-0242ac130002
          description: The documentation ID for the documentation you want to delete
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Documentation was successfully deleted

  /doumentation/{id}:
    put:
      tags:
        - developers
      summary: Updates the API Doc
      operationId: Updates the API Doc
      description: Update the API documentation details
      parameters:
        - name: id
          example: demo
          description: The documentation ID for the documentation you want to update
          in: path
          required: true
          schema:
            type: string
      responses:
        "201":
          description: "Documentation was successfully updated"
          content:
            application/json:
              schema:
                type: object
                required:
                  - key
                properties:
                  key:
                    type: string
                    example: demo
        "400":
          description: "invalid input, object invalid"

  /doumentation/invitatation:
    post:
      tags:
        - developers
      operationId: inviteUsere
      summary: Invite users to the document
      description: Invite users to the document
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - documentation
                - useremail
              properties:
                documentatId:
                  type: string
                  example: theneo-demo
                  description: Unique ID of the document
                useremail:
                  example: arobakid@theneo.io
                  description: User email that you want to add to the project
                  type: string
                permission:
                  example: editor
                  description: What type of permission you would like to give it to them? Editor or Viewer
                  type: string
      responses:
        "201":
          description: item created
          content:
            application/vnd.json:
              schema:
                $ref: "#/components/schemas/Doc"
        "400":
          description: invalid input, object invalid
        "409":
          description: an existing item already exists

components:
  schemas:
    Doc:
      type: object
      required:
        - id
        - dateAdded
        - documentation
        - title
        - category
      properties:
        id:
          type: string
          example: demo
          description: The id of the Doc. Assigned when added.
        documentation:
          type: string
          example: Theneo Sample API Doc
          description: The title of the API Doc
        key:
          type: string
          example: demo
          description: URL / slug of your API Doc
        category:
          type: string
          example: OpenAPI
          description: the category of your API
        dateAdded:
          type: string
          format: date-time
          example: "2016-08-29T09:12:33.001Z"
